{
  "name": "Hbasepacket",
  "tagline": "基于HBASE的 分布式包记录、回溯 工具",
  "body": "# 简介\r\n抓包、存储、回溯无论是在网络排障还是审计等都是可以用到的。由于工作关系，所在公司的网络比较复杂，抓包机的部署位置也比较分散，同时流量又很大，比较老套的方式就是一台机器抓包直接存放在本地硬盘，查找的时候用tcpdump过滤，但是现在都是大数据时代了，所以就尝试用hbase做了一个所谓的分布式捕获数据包回溯的小工具，用于捕获存储数据包并且可以快速回溯。\r\n\r\nPhb是抓包程序，phb-service是提供web服务的程序用于查找原始数据包，为了方面编译，相应的软件和插件分别放在了software和plugin中。\r\n\r\n# Hbase\r\n为什么选择HBASE呢？Hbase一个分布式的、面向列的开源数据库，并且它是基于HDFS的，也就是说既可以海量存储，又可以快速查询\r\n\r\n环境配置：\r\n我这里使用的版本是：\r\n\r\nhadoop-2.6.0\r\n\r\nhbase-0.98.12\r\n\r\n环境搭建这里不做详细描述，百度，google 一大堆。\r\n键值设计：\r\n存储row key设计：玩过Hbase的都知道对于HBASE的查询和存储最重要的就是Row key了，所以ROW key的设计是最重要的了。因为这个小工具是用来存储和回溯数据包的所以，rowkey就是数据包的基本五元素相关.\r\n设计rowkey 如下格式：\r\nSrcip-dstip-protocol-srcport-dst-port-ipid-fragmentoffset\r\n通过解析抓到的数据包，建立上面对应的索引，然后加上时间戳和原始的二进制数据发送到HBASE.\r\n\r\n创建hbase表：\r\nhbase shell\r\ncreate 'pcap','t'\r\n\r\n# 抓包：\r\n抓包采用的libpcap，当然为了提高抓包的性能这里可以使用pf_ring 做底层驱动，替换默认的libpcap。提高抓包的性能\r\nPF_ring 安装:\r\nPfring git地址：https://github.com/ntop/PF_RING\r\n参考地址http://blog.csdn.net/xuejiren/article/details/21529027\r\n\r\n编译抓包程序：\r\n\r\n1.先找到 Hbasesender文件\r\n \r\n修改如图对应位置的_quorum 以及_port 对应的值，第一个为zookeeper对应的地址列表（格式127.0.0.1;192.168.0.1），port是端口号，这个根据自己搭建的环境来设定，默认都是本机地址。\r\n\r\n2.编译代码，进入phb文件夹使用mvn命令打包：\r\n \r\n编译成功后会有提示，然后target文件夹中会生成打包好的jar文件\r\n \r\n注意这里要使用dependencies这个文件，这个文件比较大，包含了所有的依赖包。\r\n\r\n\r\n3.运行抓包：\r\n\r\nSudo java -cp phb-1.0-SNAPSHOT-jar-with-dependencies.jar com.zzb.phb &\r\n由于要抓包 所以需要sudo权限\r\n然后选择接口 也可以所有的  也可以指定接口。\r\n这样，数据就开始抓取并存放到相应的HBASE了。\r\n\r\n# 回溯\r\nPhb-service是用于回溯查找数据包的代码：\r\n\r\n1修改配置文件：\r\n \r\nPhb-service中的resources 有三个配置文件\r\n\r\n第一个config不用进行任何修改。\r\n\r\n编辑第二个文件：\r\n \r\n修改quorum为环境相应的ip地址以及port为相应的port。\r\n\r\n然后修改hbase.site\r\n  \r\n修改成和hbase环境中同名配置文件一致，ip地址为hbase的ip地址。\r\n\r\n编译：\r\n\r\n进入文件夹使用mvn进行编译。\r\n \r\n编译完成后同样找到对应的文件：\r\n \r\n启动webservice服务：\r\n\r\nPort 为端口号\r\n\r\nsudo java -cp phb-service-1.0-SNAPSHOT-jar-with-dependencies.jar com.zzb.pcapservice.rest.PcapService -port 80\r\n\r\n一共有三种API：\r\n\r\nGET:\r\n\r\npcapGetter/getPcapsByKeys (根据索引)\r\n\r\n\tparam:\tkeys\r\n\r\n\t\tlastRowKey\r\n\r\n\t\tstartTime（默认-1）\r\n\r\n\t\tendTime （默认-1）\r\n\r\n\t\tincludeDuplicateLastRow\r\n\r\n\t\tincludeReverseTraffic\r\n\r\n\t\tmaxResponseSize\r\n\r\npcapGetter/getPcapsByKeyRange (根据索引范围)\r\n\r\n\t\tstartKey String startKey,\r\n\r\n\t\tendKeyString endKey,\r\n\r\n\t\tmaxResponseSize String maxResponseSize,\r\n\r\n\t\tstartTime（默认-1）\r\n\r\n\t\tendTime （默认-1）\r\n\r\npcapGetter/getPcapsByIdentifiers(根据特征，地址，端口等)\r\n\r\n\t\tsrcIp\r\n\r\n\t\tdstIp\r\n\r\n\t\tprotocol\r\n\r\n\t\tsrcPort\r\n\r\n\t\tdstPort\r\n\r\n\t\tstartTime（默认-1）\r\n\r\n\t\tendTime（默认-1）\t\r\n\t\r\n\t\tincludeReverseTraffic(默认\"false\"）\r\n\r\n\r\n\r\n三个API最后都 根据ip地址，端口时间等信息，建立相应的索引直接从hbase中查找相应的数据。\r\n\r\n例如：如果想查找ip 1到ip2，某个时间范围内所有的数据包，实际索引就可以使用1-2-0-0-0-0-0-0 到 1-2-99999-99999-99999-99999-99999这种方式来进行\r\n查找。 \r\n\r\n查找指定协议1-2-6-0-0-0-0-0 到 1-2-6-99999-99999-99999-99999\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}